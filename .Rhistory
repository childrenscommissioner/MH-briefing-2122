indicator %in% c("Total actual spend - 2019/20 ^") ~ "1920",
indicator %in% c("Total actual spend - 2020/21 ^") ~ "2021",
indicator %in% c("Total actual spend - 2021/22 ^") ~ "2122")) %>%
mutate(label_percallocation = "mhspend_perc_allocation_")
# Percentage of NHS budget allocation spent on MH (all ages)
eng_percallocation <- eng_spend %>%
select(label_percallocation, year, perc_totalallocation) %>%
mutate(label = paste0(label_percallocation,year)) %>%
select(label, perc_totalallocation) %>%
pivot_wider(names_from = label, values_from = perc_totalallocation) %>%
mutate(ccg = "ENGLAND")
# Total NHS spend on mental health all ages (£m) and
eng_mhtotalspend <- df_nhse %>% select(mhspend_allages_1718:mhspend_allages_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum ccg spend on CYPMHS to get England total
eng_cypspend <- df_nhse %>% select(mhspend_cyp_1718:mhspend_cyp_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum numbers accessing CYPMHS (1+ contacts)
eng_access <- df_nhse %>% select(access_2021:access_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
View(eng_access)
# In 2022, 18.0% of children aged 7 to 16 years and 22.0% of young people aged 17 to 24 years had a probable mental disorder.
prevalence_7to16 <- 0.18
prevalence_17to24 <- 0.22
# Import latest ENGLAND population estimates (2021 census) - NOT CCG
pop_2021 <- read_excel(here('inputs/Raw data','ukpopestimatesmid2021.xls'),sheet="MYE2 - Persons", skip=7) %>%
rowwise() %>%
mutate(pop_7to16 = sum(c_across('7':'16'),na.rm=TRUE)) %>%
filter(Name %in% c("ENGLAND"))
View(pop_2021)
View(pop_2021)
# Calculate number of children with probable MH disorder
yp_mhdisorder_7to16 <- prevalence_7to16*pop_2021$pop_7to16
yp_mhdisorder_17 <- prevalence_17to24*pop_2021$`17`
print(yp_mhdisorder_7to16+yp_mhdisorder_17)
# 1+ contacts
print(england$access_2122_1c/1300000)
View(england)
View(england)
england$access_2122_1c
# sum numbers accessing CYPMHS (2+ contacts)
eng_access <- df_nhse %>% select(access_2021:access_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum numbers accessing CYPMHS (1+ contacts)
eng_access_1c <- df_nhse %>% select(access_2021_1c:access_2122_1c) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# Bind above tables and population estimates onto england df
england <- england %>%
left_join(eng_mhtotalspend, by=c("ccg")) %>%
left_join(eng_percallocation, by=c("ccg")) %>%
left_join(eng_cypspend, by=c("ccg")) %>%
left_join(eng_access, by=c("ccg")) %>%
left_join(eng_access_1c, by=c("ccg")) %>%
left_join(pop_england, by=c("ccg"))
### Author: Rebecca Gilhooly
### Title: Cleaning and analysis script for the MH Briefing (2021/22 data)
### Date: 02/03/2023
library(here)
library(dplyr)
library(ggplot2)
library(occresearch)
library(tidyr)
library(janitor)
library(haven)
library(stringr)
library(showtext)
library(kableExtra)
library(readxl)
library(scales)
# Set up ------------------------------------------------------------------
# Import fonts
font_add("HindVadodara", here('inputs','HindVadodara-Regular.ttf'), bold = here('inputs','HindVadodara-Bold.ttf'))
showtext_auto()
windows()
# Function to copy data frames
writetable <- function(x){
x %>% write.table(file="clipboard-10000", sep="\t", row.names=F)}
# Import CCG lookup
ccg_lookup <- read.csv(here('inputs','ccg_lookup.csv'))
# Import data -------------------------------------------------------------
# NHS England (NHSE)
df_nhse <- read.csv(here('intermediate','nhse_clean.csv')) %>%
mutate(ccg = str_replace(ccg, "NHS FYLDE & WYRE CCG", "NHS FYLDE AND WYRE CCG")) %>%
mutate(ccg = str_replace(ccg, "NHS NORFOLK & WAVENEY CCG", "NHS NORFOLK AND WAVENEY CCG"))
# NHS Digital (NHSD) ###
df_nhsd <- read.csv(here('intermediate','nhsd_clean.csv')) # nhsd has an extra row because it comes with one for England
# England level data frame (both NHSE and NHSD)
england <- read.csv(here('intermediate','england_df.csv'))
# Create CCG level dataframe ----------------------------------------------
# Combine nhse and nhsd tables
ccg_df <- df_nhse %>%
select(-org_cd) %>%
left_join(df_nhsd, by=c("ccg"="ccg"))
str(ccg_df)
# Import CCG/England population estimates
pop_england <- read.csv(here('intermediate','pop_england.csv'))
pop_ccg <- read.csv(here('intermediate','pop_ccg.csv'))
# bind on CCG population estimates
ccg_df <- ccg_df %>%  left_join(pop_ccg, by=c("ccg"))
# check for NAs/structure
ccg_df %>% filter(is.na(pop_2018))
ccg_df %>% filter(is.na(referrals_closed_1920))
ccg_df %>% filter(is.na(referrals_closed_2021)) %>% select(ccg, referrals_closed_2021)
str(ccg_df)
# format CCG names so that they're not all caps
ccg_df <- ccg_df %>%
mutate(across(starts_with('ccg'), ~str_to_title(ccg))) %>%
mutate(across(starts_with('ccg'), ~str_replace(ccg, "Nhs","NHS"))) %>%
mutate(across(starts_with('ccg'), ~str_replace(ccg, "Ccg","CCG"))) %>%
mutate(across(starts_with('ccg'), ~str_replace(ccg, "And","and"))) %>%
mutate(across(starts_with('ccg'), ~str_replace(ccg, "With","with")))
# "and" still capitalised for Bath and North East Somerset, Swindon And Wiltshire CCG
ccg_df <- ccg_df %>%
mutate(ccg = str_replace(ccg,"NHS Bath and North East Somerset, Swindon And Wiltshire CCG","NHS Bath and North East Somerset, Swindon and Wiltshire CCG"))
# Create England level dataframe -----------------------------------------
## Import NHSE data for England (not provided in the data sent to us)
# Data from the NHS mental health dashboard: https://www.england.nhs.uk/publication/nhs-mental-health-dashboard/
# Percentage of NHS budget allocation on mental health
eng_spend <-  read_excel(here('inputs/Raw data','nhsmh-dashboard-q4-21-22-v3.2.xlsm'),sheet="Dashboard",range="B82:K88") %>%
select(-'...2',-'...9') %>%
select('Meeting commitment to increase mental health funding','CCG spend on MH as a % of CCG base allocations')  %>%
rename(indicator = 'Meeting commitment to increase mental health funding',
perc_totalallocation = 'CCG spend on MH as a % of CCG base allocations') %>%
mutate(year = case_when(indicator %in% c("Total actual spend - 2016/17") ~ "1617",
indicator %in% c("Total actual spend - 2017/18") ~ "1718",
indicator %in% c("Total actual spend - 2018/19 ^") ~ "1819",
indicator %in% c("Total actual spend - 2019/20 ^") ~ "1920",
indicator %in% c("Total actual spend - 2020/21 ^") ~ "2021",
indicator %in% c("Total actual spend - 2021/22 ^") ~ "2122")) %>%
mutate(label_percallocation = "mhspend_perc_allocation_")
# Percentage of NHS budget allocation spent on MH (all ages)
eng_percallocation <- eng_spend %>%
select(label_percallocation, year, perc_totalallocation) %>%
mutate(label = paste0(label_percallocation,year)) %>%
select(label, perc_totalallocation) %>%
pivot_wider(names_from = label, values_from = perc_totalallocation) %>%
mutate(ccg = "ENGLAND")
# Total NHS spend on mental health all ages (£m) and
eng_mhtotalspend <- df_nhse %>% select(mhspend_allages_1718:mhspend_allages_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum ccg spend on CYPMHS to get England total
eng_cypspend <- df_nhse %>% select(mhspend_cyp_1718:mhspend_cyp_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum numbers accessing CYPMHS (2+ contacts)
eng_access <- df_nhse %>% select(access_2021:access_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# sum numbers accessing CYPMHS (1+ contacts)
eng_access_1c <- df_nhse %>% select(access_2021_1c:access_2122_1c) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T)) %>%
mutate(ccg = "ENGLAND")
# Bind above tables and population estimates onto england df
england <- england %>%
left_join(eng_mhtotalspend, by=c("ccg")) %>%
left_join(eng_percallocation, by=c("ccg")) %>%
left_join(eng_cypspend, by=c("ccg")) %>%
left_join(eng_access, by=c("ccg")) %>%
left_join(eng_access_1c, by=c("ccg")) %>%
left_join(pop_england, by=c("ccg"))
# Analysis ----------------------------------------------------------------
# Create functions for basic calculations and run for both CCG and England level DFs
# create spc_year, perc_budget, perc_referred (divide by pop), perc_closed, total CCG allocation (mhspend_allages/mhspend_perc)
# note that the latest population estimates for CCGs was published in 2020
### Spend per child
# function - easy calculations for both ccg and england level df
calc_spc <- function(x){
x %>%
mutate(spc_202122 = mhspend_cyp_2122/pop_2020,
spc_202021 = mhspend_cyp_2021/pop_2020,
spc_201920 = mhspend_cyp_1920/pop_2019)
}
ccg_df <- calc_spc(ccg_df)
england <- calc_spc(england)
### Percentage of YP population referred
calc_percreferred <- function(x){
x %>% mutate(percreferred_202122 = no_referred_2122/pop_2020,
percreferred_202021 = no_referred_2021/pop_2020,
percreferred_201920 = no_referred_1920/pop_2019)
}
ccg_df <- calc_percreferred(ccg_df)
england <- calc_percreferred(england)
### Calculate total budget allocation per ccg (not just MH)
calc_totalbudget <- function(x){
x %>%
mutate(total_budget_202122 = mhspend_allages_2122/mhspend_perc_allocation_2122) %>%
mutate(total_budget_202021 = mhspend_allages_2021/mhspend_perc_allocation_2021) %>%
mutate(total_budget_201920 = mhspend_allages_1920/mhspend_perc_allocation_1920) %>%
mutate(total_budget_201819 = mhspend_allages_1819/mhspend_perc_allocation_1819) %>%
mutate(total_budget_201718 = mhspend_allages_1718/mhspend_perc_allocation_1718)
}
ccg_df <- calc_totalbudget(ccg_df)
england <- calc_totalbudget(england) # England level
### Calculate proportion of budget allocated to CYPMHS
calc_pbudget <- function(x){
x %>%
mutate(pbudget_camhs_2122 = mhspend_cyp_2122/total_budget_202122) %>%
mutate(pbudget_camhs_2021 = mhspend_cyp_2021/total_budget_202021) %>%
mutate(pbudget_camhs_1920 = mhspend_cyp_1920/total_budget_201920) %>%
mutate(pbudget_camhs_1819 = mhspend_cyp_1819/total_budget_201819) %>%
mutate(pbudget_camhs_1718 = mhspend_cyp_1718/total_budget_201718)
}
ccg_df <- calc_pbudget(ccg_df)
england <- calc_pbudget(england)
# CCG level summary scores ------------------------------------------------
### Assign quintile to each CCG for each
# spend per child, perc budget, avg wait, perc referred, referrals closed
ccg_df <- ccg_df %>%
mutate(spc_2122_quintile = ntile(spc_202122, 5)) %>%
mutate(pbudget_2122_quintile = ntile(pbudget_camhs_2122, 5)) %>%
mutate(avgwait_2122_quintile = ntile(-avg_wait_days_2122, 5)) %>%
mutate(percreferred_2122_quintile = ntile(percreferred_202122, 5)) %>%
mutate(referralsclosed_2122_quintile = ntile(-referrals_closed_2122, 5))
### Sum quintile scores to calculated overall ccg score
ccg_df <- ccg_df %>%
mutate(overall_score_2122 = spc_2122_quintile + pbudget_2122_quintile +
avgwait_2122_quintile + percreferred_2122_quintile + referralsclosed_2122_quintile)
quintile_cols <- c("ccg","spc_2122_quintile","pbudget_2122_quintile","avgwait_2122_quintile",
"percreferred_2122_quintile","referralsclosed_2122_quintile",
"overall_score_2122")
# Check scores
ccg_df %>% select(all_of(quintile_cols)) %>% View(.)
# Create summary dataframe - CCGs
summary_cols <- c("ccg","spc_202122","pbudget_camhs_2122","avg_wait_days_2122",
"percreferred_202122","referrals_closed_2122","overall_score_2122")
df_summary <- ccg_df %>%
select(all_of(summary_cols)) %>%
mutate(pbudget_camhs_2122 = round(pbudget_camhs_2122*100,1),
percreferred_202122 = round(percreferred_202122*100,1),
spc_202122 = round(spc_202122))
# Summary for England
summary_cols_eng <- c("ccg","spc_202122","pbudget_camhs_2122","avg_wait_days_2122",
"percreferred_202122","referrals_closed_2122")
df_summary_england <- england %>%
select(all_of(summary_cols_eng)) %>%
mutate(spc_202122 = round(spc_202122),
pbudget_camhs_2122 = round(pbudget_camhs_2122*100,1),
percreferred_202122 = round(percreferred_202122*100,1))
# Export summary table for use in the interactive map script
write.csv(df_summary, here('intermediate','summarytables_202122.csv'), row.names=FALSE)
write.csv(df_summary_england, here('intermediate','summaryengland_202122.csv'), row.names=FALSE)
# Export england and ccg_df for ad hoc ccg level analysis
write.csv(ccg_df, here('intermediate','ccg_df.csv'), row.names=FALSE)
write.csv(england, here('intermediate','england_202122.csv'), row.names=FALSE)
# Outputs -  Main analysis  -----------------------------------------------------------------
# Tier 4 bed days
# select columns
t4_days <- ccg_df %>% select(starts_with(c("ccg","pop","t4beddays")))
# Tier 4 bed days data is quarterly - calculate value per year
t4_days <- t4_days %>%
rowwise() %>%
mutate(t4beddays_1718 = sum(c_across(t4beddays_Q1_201718:t4beddays_Q4_201718),na.rm=TRUE)) %>%
mutate(t4beddays_1819 = sum(c_across(t4beddays_Q1_201819:t4beddays_Q4_201819),na.rm=TRUE)) %>%
mutate(t4beddays_1920 = sum(c_across(t4beddays_Q1_201920:t4beddays_Q4_201920),na.rm=TRUE)) %>%
mutate(t4beddays_2021 = sum(c_across(t4beddays_Q1_202021:t4beddays_Q4_202021),na.rm=TRUE)) %>%
mutate(t4beddays_2122 = sum(c_across(t4beddays_Q1_202122:t4beddays_Q4_202122),na.rm=TRUE))
# Calculate Tier 4 bed days per 1000 CYP - 2020 is the latest available pop estimate for CCGs
t4_days <- t4_days %>%
mutate(t4bedrate_1819 = round(t4beddays_1819/(pop_2018/1000)),
t4bedrate_1920 = round(t4beddays_1920/(pop_2019/1000)),
t4bedrate_2021 = round(t4beddays_2021/(pop_2020/1000)),
t4bedrate_2122 = round(t4beddays_1920/(pop_2020/1000)))
### How many bed days did CYP have in tier 4 mental health wards? ###
# England level
t4_england <- t4_days %>%
select(t4beddays_1718:t4beddays_2122) %>%
group_by() %>%
summarise_at(vars(everything()),~sum(.x,na.rm=T))
# Percentage referred to CAMHS --------------------------------------------
# Check distribution of perc referred with box plot/or summary
# Shows mean and distribution of CCGs
perc_referred_long <- ccg_df %>%
select(starts_with(c("ccg","percreferred_20"))) %>%
#  mutate(percreferred_201920 = percreferred_201920*100,
#         percreferred_202021 = percreferred_202021*100,
#         percreferred_202122 = percreferred_202122*100) %>%
select(ccg, percreferred_201920,percreferred_202021,percreferred_202122) %>% #summary()
pivot_longer(cols=percreferred_201920:percreferred_202122, names_to = "name", values_to = "perc") %>%
mutate(year = case_when(name %in% c("percreferred_201920") ~ "2019-20",
name %in% c("percreferred_202021") ~ "2020-21",
name %in% c("percreferred_202122") ~ "2021-22"))
perc_referred_long %>%
ggplot(aes(x=year, y=perc))+
geom_boxplot(fill=occ_pal[2])+
theme_occ()+
theme(text=element_text(family="HindVadodara",size=30,colour="#202B51"),
axis.text.x=element_text(family="HindVadodara",size=30,colour="#202B51"))+
scale_y_continuous(label=scales::percent,limits=c(0, max(perc_referred_long$perc)+0.01)) +
ylab("% of children referred") + xlab("Year")+
labs(caption = "Note: In the figure above, the median CCG is shown by the line in the middle of the box. The upper and
lower quartiles are the ends of the box. Vertical lines represent 1.5 times the interquartile range and the
dots outside the box and whiskers are outliers.") +
theme(plot.caption = element_text(lineheight = 0.5, face = "italic"))
# In 2022, 18.0% of children aged 7 to 16 years and 22.0% of young people aged 17 to 24 years had a probable mental disorder.
prevalence_7to16 <- 0.18
prevalence_17to24 <- 0.22
# Import latest ENGLAND population estimates (2021 census) - NOT CCG
pop_2021 <- read_excel(here('inputs/Raw data','ukpopestimatesmid2021.xls'),sheet="MYE2 - Persons", skip=7) %>%
rowwise() %>%
mutate(pop_7to16 = sum(c_across('7':'16'),na.rm=TRUE)) %>%
filter(Name %in% c("ENGLAND"))
# Calculate number of children with probable MH disorder
yp_mhdisorder_7to16 <- prevalence_7to16*pop_2021$pop_7to16
yp_mhdisorder_17 <- prevalence_17to24*pop_2021$`17`
print(yp_mhdisorder_7to16+yp_mhdisorder_17)
# 1+ contacts
print(england$access_2122_1c/1300000)
# 2+ contacts
print(england$access_2122/1300000)
# Calculate number of children with probable MH disorder
yp_mhdisorder_7to16 <- prevalence_7to16*pop_2021$pop_7to16
yp_mhdisorder_17 <- prevalence_17to24*pop_2021$`17`
# total yp (age 7 to 17) that have a probable MH disorder
yp_mhdisorder_7to17 <- yp_mhdisorder_7to16+yp_mhdisorder_17
print(yp_mhdisorder_7to17)
# 1+ contacts
print(england$access_2122_1c/yp_mhdisorder_7to17)
# 2+ contacts
print(england$access_2122/yp_mhdisorder_7to17)
print(round(yp_mhdisorder_7to17,-3))
print(round(yp_mhdisorder_7to17,-6))
print(round(yp_mhdisorder_7to17,-5))
# 1+ contacts
print(round(england$access_2122_1c/yp_mhdisorder_7to17*100,0))
# 2+ contacts
print(round(england$access_2122/yp_mhdisorder_7to17*100,0))
# number who received 1+ contacts
print(round(england$access_2122_1c,-3))
# share who received 2+ contacts
print(round(england$access_2122,-3))
prevalence_17to24 <- 0.256
# Calculate number of children with probable MH disorder
yp_mhdisorder_7to16 <- prevalence_7to16*pop_2021$pop_7to16
yp_mhdisorder_17 <- prevalence_17to24*pop_2021$`17`
# total yp (age 7 to 17) that have a probable MH disorder
yp_mhdisorder_7to17 <- yp_mhdisorder_7to16+yp_mhdisorder_17
print(round(yp_mhdisorder_7to17,-5))
# share who received 1+ contacts
print(round(england$access_2122_1c/yp_mhdisorder_7to17*100,0))
# number who received 1+ contacts
print(round(england$access_2122_1c,-3))
# share who received 2+ contacts
print(round(england$access_2122/yp_mhdisorder_7to17*100,0))
# number who received 2+ contacts
print(round(england$access_2122,-3))
prevalence_17to24 <- 0.257
# Import latest ENGLAND population estimates (2021 census) - NOT CCG
pop_2021 <- read_excel(here('inputs/Raw data','ukpopestimatesmid2021.xls'),sheet="MYE2 - Persons", skip=7) %>%
rowwise() %>%
mutate(pop_7to16 = sum(c_across('7':'16'),na.rm=TRUE)) %>%
filter(Name %in% c("ENGLAND"))
# Calculate number of children with probable MH disorder
yp_mhdisorder_7to16 <- prevalence_7to16*pop_2021$pop_7to16
yp_mhdisorder_17 <- prevalence_17to24*pop_2021$`17`
# total yp (age 7 to 17) that have a probable MH disorder
yp_mhdisorder_7to17 <- yp_mhdisorder_7to16+yp_mhdisorder_17
print(round(yp_mhdisorder_7to17,-5))
# share who received 1+ contacts
print(round(england$access_2122_1c/yp_mhdisorder_7to17*100,0))
# number who received 1+ contacts
print(round(england$access_2122_1c,-3))
# share who received 2+ contacts
print(round(england$access_2122/yp_mhdisorder_7to17*100,0))
# number who received 2+ contacts
print(round(england$access_2122,-3))
View(england)
View(perc_referred_long)
#number of children who's referrals were closed before treatment (238,000)
england$referrals_closed_number_2122
# number of CCGs increased - their referral closure rate
ccg_df %>%
select(starts_with(c("ccg","referrals_closed"))) %>%
mutate(Change = round((referrals_closed_2122-referrals_closed_2021))) %>%
select(ccg,referrals_closed_2021,referrals_closed_2122,Change) %>%
filter(Change > 0) %>%
tally()
print((96/106)*100)
# Which CCGs increased closure rate the most/ decreased the most
refsclosed_change <- ccg_df %>%
select(starts_with(c("ccg","referrals_closed"))) %>%
mutate(Change = round((referrals_closed_2122-referrals_closed_2021))) %>%
select(ccg,referrals_closed_2021,referrals_closed_2122,Change) %>%
arrange(desc(Change)) %>%
rename('Clinical Commissioning Group'=ccg,
'% closed before treatment in 2020-21' = referrals_closed_2021,
'% closed before treatment in 2021-22' = referrals_closed_2122) %>%
filter(Change > 0) %>%
#filter(Change < 0) %>% # for biggest decreases
head(n=10)
View(refsclosed_change)
### wait outcomes by CCG ###
wait_outcomes_ccg <- df_nhsd %>%
select(all_of(wait_cols_2122)) %>%
rowwise() %>%
mutate(within_4w = sum(wait_0to4_weeks_2122,contacts_before_referral_2122, na.rm = T),
over_4w = sum(wait_4to6_weeks_2122, wait_6to8_weeks_2122, wait_8to10_weeks_2122, wait_10to12_weeks_2122, wait_over12_weeks_2122, na.rm = T),
still_waiting = sum(stillwaiting_nocontact_2122,stillwaiting_onecontact_2122, na.rm = T)) %>%
mutate(within_year = within_4w + over_4w,
within_4w_perc = round((within_4w/no_referred_2122)*100),
over_4w_perc = round((over_4w/no_referred_2122)*100),
still_waiting_perc =  round((still_waiting/no_referred_2122)*100),
refsclosed_perc = round((referrals_closed_number_2122/no_referred_2122)*100),
within_year_perc = round((within_year/no_referred_2122)*100))
max(ccg_df$stillwaiting_nocontact_perc_2122)
# number of CCGs increased waiting times
wait_df %>%
mutate(Change = avg_wait_days_2122-avg_wait_days_2021) %>%
select(ccg, avg_wait_days_2021,avg_wait_days_2122, Change) %>%
filter(Change > 0) %>%
tally()
# boxplot
wait_df %>%
pivot_longer(cols=2:4, names_to = "name", values_to = "days") %>%
mutate(year = case_when(name %in% c("avg_wait_days_1920") ~ "2019-20",
name %in% c("avg_wait_days_2021") ~ "2020-21",
name %in% c("avg_wait_days_2122") ~ "2021-22")) %>%
ggplot(aes(x=year, y=days))+
geom_boxplot()+
theme(text=element_text(family="HindVadodara",size=100,colour="#202B51"),
axis.text.x=element_text(family="HindVadodara",size=100,colour="#202B51"))+
theme_occ()+
ylab("Average wait time (days)") + xlab("Year")
# avg wait dataframe
wait_df <- ccg_df %>%
select(starts_with(c("ccg","avg_wait_days")))
# number of CCGs increased waiting times
wait_df %>%
mutate(Change = avg_wait_days_2122-avg_wait_days_2021) %>%
select(ccg, avg_wait_days_2021,avg_wait_days_2122, Change) %>%
filter(Change > 0) %>%
tally()
print((80/106)*100)
# import GDP deflators
# Source: ONS GDP deflators at market prices - https://www.gov.uk/government/collections/gdp-deflators-at-market-prices-and-money-gdp
gdpdeflators <-  read_excel(here('inputs','GDP deflators 092022.xlsx'),sheet="30092022 deflator update",range="B7:F79") %>%
rename(deflator = `2021-22 = 100`,
year = 'Financial year') %>%
select(year, deflator)
# create ENGLAND level long data frame for total spend
spend_trend <- england %>%
select(starts_with(c("ccg","mhspend_cyp"))) %>%
pivot_longer(cols=2:6, values_to = "spend", names_to = "names") %>%
mutate(year = case_when(names %in% c("mhspend_cyp_1718") ~ "2017-18",
names %in% c("mhspend_cyp_1819") ~ "2018-19",
names %in% c("mhspend_cyp_1920") ~ "2019-20",
names %in% c("mhspend_cyp_2021") ~ "2020-21",
names %in% c("mhspend_cyp_2122") ~ "2021-22"))
# join on GDP deflators
spend_trend <- spend_trend %>% left_join(gdpdeflators, by=c("year"))
# Reference year deflator = 19/20 pre-COVID
reference_deflator_value <- spend_trend %>%
filter(year == "2019-20") %>%
pull(deflator)
spend_trend <- spend_trend %>%
mutate(reference_deflator = reference_deflator_value)
spend_trend <- spend_trend %>%
mutate(deflator = as.numeric(deflator),
reference_deflator = as.numeric(reference_deflator),
deflated_value = spend/deflator) %>%
mutate(real_spend = round(deflated_value*reference_deflator))
View(spend_trend)
# % of total spend on adult mental services
england <- england %>%
mutate(mhspend_adult_2122 = mhspend_allages_2122-mhspend_cyp_2122,
pbudget_adult_2122 = mhspend_adult_2122/total_budget_202122) %>%
mutate(pbudget_adult_2122 = round(pbudget_adult_2122*100))
print(england$pbudget_adult_2122)
england$total_budget_202122
england$mhspend_adult_2122
england$pbudget_camhs_2122
sum(england$total_budget_202122)
sum(ccg_df$total_budget_202122)
sum(ccg_df$mhspend_allages_2122)/sum(ccg_df$total_budget_202122)
sum(ccg_df$mhspend_cyp_2122)/sum(ccg_df$total_budget_202122)
# 2021-22
ccg_df %>% filter(pbudget_camhs_2122 < 0.01) %>% select(ccg, pbudget_camhs_2122) %>% tally()
print((58/106)*100)
# 2020-21
ccg_df %>% filter(pbudget_camhs_2021 < 0.01) %>% select(ccg, pbudget_camhs_2021) %>% tally()
print((74/106)*100)
# 2021-22
ccg_df %>% filter(pbudget_camhs_2122 > 0.01) %>% select(ccg, pbudget_camhs_2122) %>% tally()
print((48/106)*100)
# 2020-21
ccg_df %>% filter(pbudget_camhs_2021 > 0.01) %>% select(ccg, pbudget_camhs_2021) %>% tally()
print((32/106)*100)
# Percentage of CCGs where spend per child has increased
ccg_df %>%
select(starts_with(c("ccg","spc"))) %>% #names()
mutate(spc_201920 = round(spc_201920),
spc_202021 = round(spc_202021),
spc_202122 = round(spc_202122),
Change = spc_202122- spc_202021) %>%
select(ccg,spc_202021,spc_202122,Change) %>%
filter(Change > 0) %>%
tally()
print((80/106)*100)
